// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: src/Nethermind/Nethermind.Grpc/Nethermind.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nethermind.Grpc {

  /// <summary>Holder for reflection information generated from src/Nethermind/Nethermind.Grpc/Nethermind.proto</summary>
  public static partial class NethermindReflection {

    #region Descriptor
    /// <summary>File descriptor for src/Nethermind/Nethermind.Grpc/Nethermind.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NethermindReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci9zcmMvTmV0aGVybWluZC9OZXRoZXJtaW5kLkdycGMvTmV0aGVybWluZC5w",
            "cm90bxIPTmV0aGVybWluZC5HcnBjIgcKBUVtcHR5Il0KDE5kbUV4dGVuc2lv",
            "bhIMCgRuYW1lGAEgASgJEgwKBHR5cGUYAiABKAkSGAoQYWNjZXB0QWxsSGVh",
            "ZGVycxgDIAEoCBIXCg9hY2NlcHRlZEhlYWRlcnMYBCADKAkiUQoITmRtUXVl",
            "cnkSEgoKaXRlcmF0aW9ucxgBIAEoDRIQCghoZWFkZXJJZBgCIAEoCRIRCglk",
            "ZXBvc2l0SWQYAyABKAkSDAoEYXJncxgEIAMoCSJxCgxOZG1RdWVyeURhdGES",
            "KAoFcXVlcnkYASABKAsyGS5OZXRoZXJtaW5kLkdycGMuTmRtUXVlcnkSDwoH",
            "aXNWYWxpZBgCIAEoCBImCgRkYXRhGAMgAygLMhguTmV0aGVybWluZC5HcnBj",
            "Lk5kbURhdGEiJQoHTmRtRGF0YRILCgNhcmcYASABKAkSDQoFdmFsdWUYAiAB",
            "KAkiKAoTTmRtRGF0YVN1YnNjcmlwdGlvbhIRCglkZXBvc2l0SWQYASABKAki",
            "MgoPTmRtRGF0YVJlc3BvbnNlEhEKCWRlcG9zaXRJZBgBIAEoCRIMCgRkYXRh",
            "GAIgASgJMo0CChFOZXRoZXJtaW5kU2VydmljZRJQChBJbml0TmRtRXh0ZW5z",
            "aW9uEh0uTmV0aGVybWluZC5HcnBjLk5kbUV4dGVuc2lvbhoZLk5ldGhlcm1p",
            "bmQuR3JwYy5OZG1RdWVyeSIAMAESRgoLU2VuZE5kbURhdGESHS5OZXRoZXJt",
            "aW5kLkdycGMuTmRtUXVlcnlEYXRhGhYuTmV0aGVybWluZC5HcnBjLkVtcHR5",
            "IgASXgoQU3Vic2NyaWJlTmRtRGF0YRIkLk5ldGhlcm1pbmQuR3JwYy5OZG1E",
            "YXRhU3Vic2NyaXB0aW9uGiAuTmV0aGVybWluZC5HcnBjLk5kbURhdGFSZXNw",
            "b25zZSIAMAFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nethermind.Grpc.Empty), global::Nethermind.Grpc.Empty.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nethermind.Grpc.NdmExtension), global::Nethermind.Grpc.NdmExtension.Parser, new[]{ "Name", "Type", "AcceptAllHeaders", "AcceptedHeaders" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nethermind.Grpc.NdmQuery), global::Nethermind.Grpc.NdmQuery.Parser, new[]{ "Iterations", "HeaderId", "DepositId", "Args" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nethermind.Grpc.NdmQueryData), global::Nethermind.Grpc.NdmQueryData.Parser, new[]{ "Query", "IsValid", "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nethermind.Grpc.NdmData), global::Nethermind.Grpc.NdmData.Parser, new[]{ "Arg", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nethermind.Grpc.NdmDataSubscription), global::Nethermind.Grpc.NdmDataSubscription.Parser, new[]{ "DepositId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nethermind.Grpc.NdmDataResponse), global::Nethermind.Grpc.NdmDataResponse.Parser, new[]{ "DepositId", "Data" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Empty : pb::IMessage<Empty> {
    private static readonly pb::MessageParser<Empty> _parser = new pb::MessageParser<Empty>(() => new Empty());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Empty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nethermind.Grpc.NethermindReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty(Empty other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty Clone() {
      return new Empty(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Empty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Empty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Empty other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class NdmExtension : pb::IMessage<NdmExtension> {
    private static readonly pb::MessageParser<NdmExtension> _parser = new pb::MessageParser<NdmExtension>(() => new NdmExtension());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NdmExtension> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nethermind.Grpc.NethermindReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NdmExtension() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NdmExtension(NdmExtension other) : this() {
      name_ = other.name_;
      type_ = other.type_;
      acceptAllHeaders_ = other.acceptAllHeaders_;
      acceptedHeaders_ = other.acceptedHeaders_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NdmExtension Clone() {
      return new NdmExtension(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "acceptAllHeaders" field.</summary>
    public const int AcceptAllHeadersFieldNumber = 3;
    private bool acceptAllHeaders_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AcceptAllHeaders {
      get { return acceptAllHeaders_; }
      set {
        acceptAllHeaders_ = value;
      }
    }

    /// <summary>Field number for the "acceptedHeaders" field.</summary>
    public const int AcceptedHeadersFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_acceptedHeaders_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> acceptedHeaders_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AcceptedHeaders {
      get { return acceptedHeaders_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NdmExtension);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NdmExtension other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      if (AcceptAllHeaders != other.AcceptAllHeaders) return false;
      if(!acceptedHeaders_.Equals(other.acceptedHeaders_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (AcceptAllHeaders != false) hash ^= AcceptAllHeaders.GetHashCode();
      hash ^= acceptedHeaders_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Type);
      }
      if (AcceptAllHeaders != false) {
        output.WriteRawTag(24);
        output.WriteBool(AcceptAllHeaders);
      }
      acceptedHeaders_.WriteTo(output, _repeated_acceptedHeaders_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (AcceptAllHeaders != false) {
        size += 1 + 1;
      }
      size += acceptedHeaders_.CalculateSize(_repeated_acceptedHeaders_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NdmExtension other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.AcceptAllHeaders != false) {
        AcceptAllHeaders = other.AcceptAllHeaders;
      }
      acceptedHeaders_.Add(other.acceptedHeaders_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Type = input.ReadString();
            break;
          }
          case 24: {
            AcceptAllHeaders = input.ReadBool();
            break;
          }
          case 34: {
            acceptedHeaders_.AddEntriesFrom(input, _repeated_acceptedHeaders_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class NdmQuery : pb::IMessage<NdmQuery> {
    private static readonly pb::MessageParser<NdmQuery> _parser = new pb::MessageParser<NdmQuery>(() => new NdmQuery());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NdmQuery> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nethermind.Grpc.NethermindReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NdmQuery() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NdmQuery(NdmQuery other) : this() {
      iterations_ = other.iterations_;
      headerId_ = other.headerId_;
      depositId_ = other.depositId_;
      args_ = other.args_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NdmQuery Clone() {
      return new NdmQuery(this);
    }

    /// <summary>Field number for the "iterations" field.</summary>
    public const int IterationsFieldNumber = 1;
    private uint iterations_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Iterations {
      get { return iterations_; }
      set {
        iterations_ = value;
      }
    }

    /// <summary>Field number for the "headerId" field.</summary>
    public const int HeaderIdFieldNumber = 2;
    private string headerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HeaderId {
      get { return headerId_; }
      set {
        headerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "depositId" field.</summary>
    public const int DepositIdFieldNumber = 3;
    private string depositId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DepositId {
      get { return depositId_; }
      set {
        depositId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "args" field.</summary>
    public const int ArgsFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_args_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> args_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Args {
      get { return args_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NdmQuery);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NdmQuery other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Iterations != other.Iterations) return false;
      if (HeaderId != other.HeaderId) return false;
      if (DepositId != other.DepositId) return false;
      if(!args_.Equals(other.args_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Iterations != 0) hash ^= Iterations.GetHashCode();
      if (HeaderId.Length != 0) hash ^= HeaderId.GetHashCode();
      if (DepositId.Length != 0) hash ^= DepositId.GetHashCode();
      hash ^= args_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Iterations != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Iterations);
      }
      if (HeaderId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(HeaderId);
      }
      if (DepositId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DepositId);
      }
      args_.WriteTo(output, _repeated_args_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Iterations != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Iterations);
      }
      if (HeaderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HeaderId);
      }
      if (DepositId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DepositId);
      }
      size += args_.CalculateSize(_repeated_args_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NdmQuery other) {
      if (other == null) {
        return;
      }
      if (other.Iterations != 0) {
        Iterations = other.Iterations;
      }
      if (other.HeaderId.Length != 0) {
        HeaderId = other.HeaderId;
      }
      if (other.DepositId.Length != 0) {
        DepositId = other.DepositId;
      }
      args_.Add(other.args_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Iterations = input.ReadUInt32();
            break;
          }
          case 18: {
            HeaderId = input.ReadString();
            break;
          }
          case 26: {
            DepositId = input.ReadString();
            break;
          }
          case 34: {
            args_.AddEntriesFrom(input, _repeated_args_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class NdmQueryData : pb::IMessage<NdmQueryData> {
    private static readonly pb::MessageParser<NdmQueryData> _parser = new pb::MessageParser<NdmQueryData>(() => new NdmQueryData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NdmQueryData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nethermind.Grpc.NethermindReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NdmQueryData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NdmQueryData(NdmQueryData other) : this() {
      query_ = other.query_ != null ? other.query_.Clone() : null;
      isValid_ = other.isValid_;
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NdmQueryData Clone() {
      return new NdmQueryData(this);
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 1;
    private global::Nethermind.Grpc.NdmQuery query_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nethermind.Grpc.NdmQuery Query {
      get { return query_; }
      set {
        query_ = value;
      }
    }

    /// <summary>Field number for the "isValid" field.</summary>
    public const int IsValidFieldNumber = 2;
    private bool isValid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsValid {
      get { return isValid_; }
      set {
        isValid_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Nethermind.Grpc.NdmData> _repeated_data_codec
        = pb::FieldCodec.ForMessage(26, global::Nethermind.Grpc.NdmData.Parser);
    private readonly pbc::RepeatedField<global::Nethermind.Grpc.NdmData> data_ = new pbc::RepeatedField<global::Nethermind.Grpc.NdmData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Nethermind.Grpc.NdmData> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NdmQueryData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NdmQueryData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Query, other.Query)) return false;
      if (IsValid != other.IsValid) return false;
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (query_ != null) hash ^= Query.GetHashCode();
      if (IsValid != false) hash ^= IsValid.GetHashCode();
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (query_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Query);
      }
      if (IsValid != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsValid);
      }
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (query_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Query);
      }
      if (IsValid != false) {
        size += 1 + 1;
      }
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NdmQueryData other) {
      if (other == null) {
        return;
      }
      if (other.query_ != null) {
        if (query_ == null) {
          query_ = new global::Nethermind.Grpc.NdmQuery();
        }
        Query.MergeFrom(other.Query);
      }
      if (other.IsValid != false) {
        IsValid = other.IsValid;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (query_ == null) {
              query_ = new global::Nethermind.Grpc.NdmQuery();
            }
            input.ReadMessage(query_);
            break;
          }
          case 16: {
            IsValid = input.ReadBool();
            break;
          }
          case 26: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class NdmData : pb::IMessage<NdmData> {
    private static readonly pb::MessageParser<NdmData> _parser = new pb::MessageParser<NdmData>(() => new NdmData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NdmData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nethermind.Grpc.NethermindReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NdmData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NdmData(NdmData other) : this() {
      arg_ = other.arg_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NdmData Clone() {
      return new NdmData(this);
    }

    /// <summary>Field number for the "arg" field.</summary>
    public const int ArgFieldNumber = 1;
    private string arg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Arg {
      get { return arg_; }
      set {
        arg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NdmData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NdmData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Arg != other.Arg) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Arg.Length != 0) hash ^= Arg.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Arg.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Arg);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Arg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Arg);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NdmData other) {
      if (other == null) {
        return;
      }
      if (other.Arg.Length != 0) {
        Arg = other.Arg;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Arg = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NdmDataSubscription : pb::IMessage<NdmDataSubscription> {
    private static readonly pb::MessageParser<NdmDataSubscription> _parser = new pb::MessageParser<NdmDataSubscription>(() => new NdmDataSubscription());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NdmDataSubscription> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nethermind.Grpc.NethermindReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NdmDataSubscription() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NdmDataSubscription(NdmDataSubscription other) : this() {
      depositId_ = other.depositId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NdmDataSubscription Clone() {
      return new NdmDataSubscription(this);
    }

    /// <summary>Field number for the "depositId" field.</summary>
    public const int DepositIdFieldNumber = 1;
    private string depositId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DepositId {
      get { return depositId_; }
      set {
        depositId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NdmDataSubscription);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NdmDataSubscription other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DepositId != other.DepositId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DepositId.Length != 0) hash ^= DepositId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DepositId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DepositId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DepositId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DepositId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NdmDataSubscription other) {
      if (other == null) {
        return;
      }
      if (other.DepositId.Length != 0) {
        DepositId = other.DepositId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DepositId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NdmDataResponse : pb::IMessage<NdmDataResponse> {
    private static readonly pb::MessageParser<NdmDataResponse> _parser = new pb::MessageParser<NdmDataResponse>(() => new NdmDataResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NdmDataResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nethermind.Grpc.NethermindReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NdmDataResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NdmDataResponse(NdmDataResponse other) : this() {
      depositId_ = other.depositId_;
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NdmDataResponse Clone() {
      return new NdmDataResponse(this);
    }

    /// <summary>Field number for the "depositId" field.</summary>
    public const int DepositIdFieldNumber = 1;
    private string depositId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DepositId {
      get { return depositId_; }
      set {
        depositId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private string data_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NdmDataResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NdmDataResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DepositId != other.DepositId) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DepositId.Length != 0) hash ^= DepositId.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DepositId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DepositId);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DepositId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DepositId);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NdmDataResponse other) {
      if (other == null) {
        return;
      }
      if (other.DepositId.Length != 0) {
        DepositId = other.DepositId;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DepositId = input.ReadString();
            break;
          }
          case 18: {
            Data = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
